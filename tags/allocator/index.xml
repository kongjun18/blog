<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Allocator - 标签 - 孔俊的知识库</title><link>/tags/allocator/</link><description>Allocator - 标签 - 孔俊的知识库</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 12 Dec 2022 21:01:48 +0800</lastBuildDate><atom:link href="/tags/allocator/" rel="self" type="application/rss+xml"/><item><title>致敬经典：K&amp;R allocator 内存分配器</title><link>/posts/2022/12/12/</link><pubDate>Mon, 12 Dec 2022 21:01:48 +0800</pubDate><author>作者</author><guid>/posts/2022/12/12/</guid><description><![CDATA[k&amp;R allocator 是Brain Kernighan和 Dennis Ritchie 的名著 The C Programming Language 第 8.7 节中介绍的一个简单 malloc 实现。因为该书被称为 K&amp;R C，这个 malloc 实现也被称为 K&amp;C allocator。 K&amp;R allocator 的实现非常简洁，Linux 内核基于 K&amp;R allocator 实现了用于嵌入式系统 slob allocator。见 slob: introduce the SLOB allocator，邮件摘要如下： SLOB is a traditional K&amp;R/UNIX allocator with a SLAB emulation layer, similar to the original Linux kmalloc allocator that SLAB replaced. It&#39;s signicantly smaller code and is more memory efficient. But like all similar allocators, it scales poorly and suffers from fragmentation more than]]></description></item></channel></rss>