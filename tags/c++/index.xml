<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C++ - 标签 - 孔俊的知识库</title><link>/tags/c++/</link><description>C++ - 标签 - 孔俊的知识库</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 24 Jan 2020 20:21:59 +0800</lastBuildDate><atom:link href="/tags/c++/" rel="self" type="application/rss+xml"/><item><title>C/C++ 的严格别名规则</title><link>/posts/2020/01/24/</link><pubDate>Fri, 24 Jan 2020 20:21:59 +0800</pubDate><author>作者</author><guid>/posts/2020/01/24/</guid><description>C/C++ 中的变量占有一块内存，这时这个变量就是这块内存的别名，指针也可以指向内存，因此同一块内存可能会有多个别名。 int main() { int i = 0; int *ip = &amp;amp;i; } 其中i和ip是同一块内存，都是它的别名。 内存别名的存在会影响编译器生成的代码的行为。 考虑以下代码块（来自 CSAPP 5.1 节）： void twiddle1(long *xp, long *yp) { *xp += *yp; *xp += yp; } void tiwddle2(long *xp, long *yp) { *xp *= 2 * *yp; } 这两个函数的功能看起来是相同的，但其实不然。加入，xp和yp指向</description></item></channel></rss>