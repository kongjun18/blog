<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Concurrency - 分类 - 孔俊的知识库</title><link>/categories/concurrency/</link><description>Concurrency - 分类 - 孔俊的知识库</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 03 Nov 2022 11:00:56 +0800</lastBuildDate><atom:link href="/categories/concurrency/" rel="self" type="application/rss+xml"/><item><title>【译】内存屏障：软件黑客的硬件视角</title><link>/posts/2022/11/03/</link><pubDate>Thu, 03 Nov 2022 11:00:56 +0800</pubDate><author>作者</author><guid>/posts/2022/11/03/</guid><description>译者序 Memory Barriers: a Hardware View for Software Hackers 是并发编程专家 Paul E. McKenney 的经典论文，该论文同时收录在他的著作 Is Parallel Programming Hard, And, If So, What Can You Do About It? 附录 C Why Memory Barriers? 中。 本文全文翻译该论文。 为什么中了邪的 CPU 设计者要让可怜的一无所知的软件设计者受内存屏障（memory barrier）的伤害？ 简单地说，因为乱序内存引用可以带来更好的性能，所以需要用内存屏障在同步原语这类其正确操作依赖于排序的内存引用的东西中强制</description></item><item><title>【译】一种面向多核架构的无锁、缓存高效的共享环形缓冲区</title><link>/posts/2022/10/13/</link><pubDate>Thu, 13 Oct 2022 22:26:21 +0800</pubDate><author>作者</author><guid>/posts/2022/10/13/</guid><description>译者序 论文 A Lock-Free, Cache-Efficient Shared Ring Buffer for Multi-Core Architectures 介绍了一种专为多核架构设计、用于单生产者/单消费者模型的环形缓冲区，称为 MCRingBuffer。论文性能测试表明，其吞吐量数倍于 Lamport 提出的 BasicRingBuffer。 MCRingBuffer 将环形缓存区划分为多个块，块划分为多个槽。 论文基于基础的环形缓冲区，从以下两方面着手提高性能： 降低读共享控制变量的频率：维护私有变量，仅在缓冲区可能满/空时读取</description></item></channel></rss>